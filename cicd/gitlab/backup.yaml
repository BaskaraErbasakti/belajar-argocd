stages:
  - deploy

variables:
  REPO_ARGOCD_URL: github.com/BaskaraErbasakti/belajar-argocd

.deploy_template: &deploy_template
  stage: deploy
  image: alpine/git:v2.26.2
  environment:
    url: https://argocd.example.com
  before_script:
    - wget https://github.com/mikefarah/yq/releases/download/v4.13.5/yq_linux_amd64.tar.gz -O - | tar xz && mv yq_linux_amd64 /usr/bin/yq
  script:
    - git config --global user.name "$GITLAB_USER"
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git clone --depth 1 -b master https://$GIT_TOKEN@$REPO_ARGOCD_URL argocd-repo
    - cd argocd-repo/$CI_COMMIT_REF_SLUG/$CI_PROJECT_NAME
    - |
      if [ "$CI_COMMIT_REF_SLUG" == "master" ]; then
        yq eval '.image.tag = env(CI_COMMIT_SHORT_SHA)' -i values.yaml
        yq eval '.appVersion = env(CI_COMMIT_SHORT_SHA)' -i Chart.yaml
      else
        yq eval '.image.tag = env(CI_COMMIT_TAG)' -i values.yaml
        yq eval '.appVersion = env(CI_COMMIT_TAG)' -i Chart.yaml
      fi
    - git add values.yaml chart.yaml
    - |
      if [ "$CI_COMMIT_REF_SLUG" == "master" ]; then
        git commit -m "Update $CI_PROJECT_NAME $CI_COMMIT_REF_SLUG with tag $CI_COMMIT_SHORT_SHA"
      else
        git commit -m "Update $CI_PROJECT_NAME $CI_COMMIT_REF_SLUG with tag $CI_COMMIT_TAG"
      fi
    - git push origin master

deploy:staging:
  <<: *deploy_template
  environment:
    name: staging
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success

deploy:production:
  <<: *deploy_template
  environment:
    name: production
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v(\d+\.)?(\d+\.)?(\d+)$/'
      when: on_success
